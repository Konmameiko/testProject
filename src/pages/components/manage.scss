// 设置变量
$count: 100;	// 总数
$sqrt: 10;		// 	开方根
$per: 11%;
// 设置SCSS循环 输出自定义@prpperty 名称
@for $i from 1 to ($count + 1) {
	@property --m-#{$i} {
		syntax: "<number>";
		initial-value: 1;
		inherits: false;
	 }
}
// mask 渐变属性
@function bgSet($n) {
	$bg : radial-gradient(rgba(0, 0, 0, var(--m-1)), rgba(0, 0, 0, var(--m-1)));
	
	@for $i from 2 through $n {         
		$bg: $bg, radial-gradient(rgba(0, 0, 0, var(--m-#{$i})), rgba(0, 0, 0, var(--m-#{$i})));
	}
	
	@return $bg;
}
// mask 位置设定
@function positionSet($n) {
	$bgPosition: ();
	@for $i from 0 through ($n) {   
		@for $j from 0 through ($n - 1) {  
			// $bgPosition: $bgPosition, $i * $per $j * $per;
			$bgPosition: $bgPosition, $i * 6vw $j * 6vh;
		}
	}
	@return $bgPosition;
}
// mask 渐变时长设定
@function transitionSet($n) {
	$transition: --m-1 0.1s 0.1s;
	@for $i from 1 through $n {   
		$transition: $transition, --m-#{$i} #{random(1000)}ms #{random(1000)}ms linear;
	}
	@return $transition;
}

.manage {
	position: relative;
	width: 100%;
	height: 100vh;
	background-image: url('../../assets/images/24.jpg');
	background-size: cover;
	background-repeat: no-repeat;

	&:before {
		content: '';
		position: absolute;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: rgba(0, 0, 0, 0.2);
	}

	h1 {
		width: 100%;
		height: 4rem;
		top: 0;
		color: rgb(7, 14, 26);
		text-align: center;
		font-weight: 900;
		font-size: 4rem;
	}

	.swipers {
		display: flex;
		.mySwiper {
			width: 60vw;
			height: 60vh;
			margin: 4vh 10vh 0 6vw;
			// border: 5px solid brown;
			// border-radius: 8px;
			box-shadow: 0 10px 20px #0000007a;

			span {
				position: absolute;
				top: 50vh;
				z-index: 5;
				width: 100%;
				font-size: 24px;
				line-height: 32px;
				text-align: center;
			}

			.left {
				position: absolute;
				left: 1vw;
				top: calc(30vh - 40px);
				width: 60px;
				height: 80px;
				z-index: 2;
				transform: scale(0.5, 0.5);
				cursor: pointer;
			}

			.right {
				position: absolute;
				right: 1vw;
				top: calc(30vh - 40px);
				width: 60px;
				height: 80px;
				z-index: 2;
				transform: scale(0.5, 0.5);
				cursor: pointer;
			}

			.managePhoto {
				height: 100%;
				width: 100%;
				vertical-align: middle;
				object-fit: cover;
			}

			.blur {
				filter: blur(2px);
			}

			.brightness {
				// 设置亮度 默认值为1
				filter: brightness(0.7);
			}

			.contrast {
				// 设置对比度  默认值为1
				filter: contrast(1.5);
			}

			.hueRotate {
				//HSL 色相（hue）是色轮上从 0 到 360 的度数。0 是红色，120 是绿色，240 是蓝色
				filter: hue-rotate(70deg);
			}

			.invert {
				// 翻转图像的颜色  参数0-1  50%时可将页面完全置灰
				filter: invert(60%);
			}

			.grayscale {
				filter: grayscale(100%);
			}

			.sepia {
				filter: sepia(100%);
			}

			.saturate {
				// 设置图像饱和度
				filter: saturate(200%);
			}
			
			.fadeout{
				mask: bgSet($count);
				mask-size: $per $per;
				mask-repeat: no-repeat;
				mask-position: positionSet($sqrt);
				transition: transitionSet($count);
				mask-border: none;
				// 设置图片渐隐
				&:hover {
					@for $i from 1 through $count {         
						--m-#{$i}: 0;
					}
				}
			}
		}

		.mySwiper2 {
			width: 20vw;
			height: 60vh;
			margin: 4vh 0 0 6vw;
			border: 5px solid brown;
			border-radius: 8px;
			box-shadow: 0 10px 20px #00007a;
		}
	}

	.column {
		flex: 25%;
		max-width: 25%;
		padding: 0 4px;

		span {
			width: 100%;
			font-size: 24px;
			line-height: 32px;
			text-align: center;
			float: right;
		}

		/* 响应式布局 - 创建两列而不是四列布局 */
	}

	@media (max-width: 960px) {
		.column {
			flex: 50%;
			max-width: 50%;
		}
	}

	/* 响应式布局 - 创建上下堆叠而不是并排的两列布局 */
	@media (max-width: 480px) {
		.column {
			flex: 100%;
			max-width: 100%;
		}
	}
}

.codePart {
	.title {
		width: 100%;
		color: rgb(49, 22, 0);
		text-align: center;
		font-weight: 900;
		font-size: 2rem;
	}

	.code {
		width: 90%;
		height: calc(60vh - 10rem);
		border-radius: 10px;
		margin: 0 0 0 5%;
		padding: 10px 10px;
		font-family: monospace;
		box-shadow: 0.1em 0.1em 0.5em rgba(0, 0, 0, 0.45);
		line-height: 0;
		counter-reset: line;
		background-color: #263238;
		color: white;
		overflow-y: scroll;

		// 去除滚动条显示
		&::-webkit-scrollbar {
			width: 0 !important;
		}

		p {
			display: block;
			line-height: 1.5rem;
			padding-right: 5px;

			&:before {
				counter-increment: line;
				content: counter(line);
				display: inline-block;
				border-right: 1px solid #ddd;
				padding: 0 0.5em;
				margin-right: 0.5em;
				color: rgb(204, 204, 204);
			}

			&:nth-child(2n) {
				background-color: #416475;
			}
		}
	}
}

.btn {
	text-transform: uppercase;
	position: fixed;
	display: inline-block;
	width: 130px;
	height: 40px;
	left: 50%;
	bottom: 5%;
	transform: translate(-50%, 0);
	color: #fff;
	border-radius: 5px;
	padding: 10px 25px;
	font-family: 'Lato', sans-serif;
	font-weight: 500;
	box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),
		7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);
	outline: none;
	border: none;
	transition: all 0.3s ease;
	overflow: hidden;

	&:after {
		position: absolute;
		content: ' ';
		z-index: -1;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: #1fd1f9;
		background-image: linear-gradient(315deg, #1fd1f9 0%, #b621fe 74%);
		transition: all 0.3s ease;
	}

	&:hover {
		background: transparent;
		box-shadow: 4px 4px 6px 0 rgba(255, 255, 255, 0.5),
			-4px -4px 6px 0 rgba(116, 125, 136, 0.2),
			inset -4px -4px 6px 0 rgba(255, 255, 255, 0.5),
			inset 4px 4px 6px 0 rgba(116, 125, 136, 0.3);
		color: #ffffff;

		&:after {
			-webkit-transform: scale(2) rotate(180deg);
			transform: scale(2) rotate(180deg);
			box-shadow: 4px 4px 6px 0 rgba(255, 255, 255, 0.5),
				-4px -4px 6px 0 rgba(116, 125, 136, 0.2),
				inset -4px -4px 6px 0 rgba(255, 255, 255, 0.5),
				inset 4px 4px 6px 0 rgba(116, 125, 136, 0.3);
		}
	}
}
